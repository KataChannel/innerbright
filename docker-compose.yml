services:
  nextjs:
    build:
      context: ./site
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

  # angular:
  #   build:
  #     context: ./admin
  #     dockerfile: Dockerfile
  #   ports:
  #     - "4200:80"
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:80"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #   deploy:
  #     update_config:
  #       parallelism: 2
  #       delay: 10s
  #     restart_policy:
  #       condition: on-failure
  #     resources:
  #       limits:
  #         cpus: '0.50'
  #         memory: 512M
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  #   networks:
  #     - app-network

  nestjs:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "3333:3333"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3333"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge