services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    image: katacore/api:${API_VERSION:-latest}
    container_name: katacore-api
    restart: ${RESTART_POLICY:-unless-stopped}
    ports:
      - "${API_PORT:-3001}:3001"
    environment:
      NODE_ENV: production
      API_PORT: 3001
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      JWT_SECRET: ${JWT_SECRET}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      CORS_ORIGIN: ${CORS_ORIGIN}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_PORT: ${MINIO_PORT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_USE_SSL: ${MINIO_USE_SSL:-false}
    networks:
      - katacore-network
    depends_on:
      - postgres
      - redis
      - minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    volumes:
      - api_logs:/app/logs
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "3"
        
  site:
    build:
      context: ./site
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    image: katacore/site:${SITE_VERSION:-latest}
    container_name: katacore-site
    restart: ${RESTART_POLICY:-unless-stopped}
    ports:
      - "${SITE_PORT:-3000}:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL}
      NEXT_PUBLIC_MINIO_ENDPOINT: ${NEXT_PUBLIC_MINIO_ENDPOINT}
      INTERNAL_API_URL: ${INTERNAL_API_URL:-http://api:3001}
    networks:
      - katacore-network
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "3"

  # ===== POSTGRESQL DATABASE =====
  postgres:
    image: postgres:15-alpine
    container_name: katacore-postgres
    restart: ${RESTART_POLICY:-unless-stopped}
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    networks:
      - katacore-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "3"

  # ===== REDIS CACHE =====
  redis:
    image: redis:7-alpine
    container_name: katacore-redis
    restart: ${RESTART_POLICY:-unless-stopped}
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    networks:
      - katacore-network
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "3"

  # ===== MINIO OBJECT STORAGE =====
  minio:
    image: minio/minio:latest
    container_name: katacore-minio
    restart: ${RESTART_POLICY:-unless-stopped}
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    networks:
      - katacore-network
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "3"

  # ===== PGADMIN WEB INTERFACE =====
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: katacore-pgadmin
    restart: ${RESTART_POLICY:-unless-stopped}
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    networks:
      - katacore-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/misc/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "3"

# ===== NETWORKS =====
networks:
  katacore-network:
    driver: bridge
    name: katacore-network

# ===== VOLUMES =====
volumes:
  # Database storage
  postgres_data:
    name: katacore-postgres-data
  redis_data:
    name: katacore-redis-data
  minio_data:
    name: katacore-minio-data
  pgadmin_data:
    name: katacore-pgadmin-data
  
  # Application logs
  api_logs:
    name: katacore-api-logs
